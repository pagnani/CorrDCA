var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = CorrDCA","category":"page"},{"location":"#CorrDCA","page":"Home","title":"CorrDCA","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [CorrDCA]","category":"page"},{"location":"#CorrDCA.compute_weights-Union{Tuple{Ti}, Tuple{Array{Ti,2},Real}} where Ti<:Integer","page":"Home","title":"CorrDCA.compute_weights","text":"compute_weights(Z::Matrix{Ti}, theta::Real) where Ti <: Integer\n\nCompute the normalized counts of the number of sequences at hamming distance ≤ theta from any given sequence  in Z.\n\n\n\n\n\n","category":"method"},{"location":"#CorrDCA.compute_weights-Union{Tuple{Ti}, Tuple{Array{Ti,2},Symbol}} where Ti<:Integer","page":"Home","title":"CorrDCA.compute_weights","text":"compute_weights(Z::Matrix{Ti}, theta::Symbol) where Ti<:Integer\n\nCompute the normalized counts of the number of sequences at hamming distance ≤ of a precomputed optimal threshold. See Fast and accurate multivariate Gaussian modeling of protein families: Predicting residue contacts and  protein-interaction partners [https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0092721] and in particular the Supplementary Information at section 2 Reweighting Scheme for details.\n\n\n\n\n\n","category":"method"},{"location":"#CorrDCA.read_fasta_alignment-Tuple{AbstractString,Real}","page":"Home","title":"CorrDCA.read_fasta_alignment","text":"read_fasta_alignment(filename::AbstractString, max_gap_fraction::Real)\n\nReturn a L × M matrix of integers (L is the sequence length, and M is the number of sequences) of the  multiple sequence alignment contained in the fasta file filename including all sequences with a fraction of gaps (-) ≤  max_gap_fraction.\n\n\n\n\n\n","category":"method"},{"location":"#CorrDCA.remove_duplicate_sequences-Union{Tuple{Array{Ti,2}}, Tuple{Ti}} where Ti<:Integer","page":"Home","title":"CorrDCA.remove_duplicate_sequences","text":"remove_duplicate_sequences(Z::Matrix{Ti}) where Ti<:Integer\n\nRemove duplicate sequences (columns) in the alignment matrix Z\n\nExamples\n\njulia> Z = [1 2 3 1;\n            1 3 2 1;]\n2×4 Array{Int64,2}:\n 1  2  3  1\n 1  3  2  1\n\njulia> remove_duplicate_sequences(Z)\nremoving duplicate sequences... done: 4 -> 3\n([1 2 3; 1 3 2], [1, 2, 3])\n\n\n\n\n\n","category":"method"}]
}
